#user  nobody;
worker_processes               auto;
worker_cpu_affinity            auto;

error_log  /home/nginx_log/error.log error;
#pid        logs/nginx.pid;
worker_rlimit_nofile           65535; 

events {
    use epoll;
    worker_connections         1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    #charset utf-8,gb2312,gb18030;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $upstream_addr $upstream_status';

    #access_log  /home/nginx_log/access.log  main;

    sendfile                     on;
    tcp_nopush                   on;
    tcp_nodelay                  on;
    keepalive_timeout            30;
    #proxy_connect_timeout        5s;
    #proxy_read_timeout           5s;
    #proxy_send_timeout           10s;
    client_max_body_size         30m;
    #gzip on;
    client_body_buffer_size      128k;
    proxy_buffer_size            64k;
    proxy_buffers                4 128k;
    proxy_busy_buffers_size      128k;
    reset_timedout_connection    on; 
    client_header_buffer_size    16k;
    large_client_header_buffers  4 64k;
    #trim on;
    open_file_cache max=102400 inactive=20s; 
    open_file_cache_valid 30s; 
    open_file_cache_min_uses 2; 
    open_file_cache_errors on; 
    proxy_temp_file_write_size 1024m;
    proxy_temp_path /home/proxy_temp_dir;
    proxy_cache_path /home/proxy_temp levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=10g; 


    {{range gets "/HTTP/*"}}
    {{$data := json .Value}}
    upstream http_{{ $data.HOST_NAME }} {
        
        {{range $data.IP}}
        server {{ . }}:80;
        {{end}}
    }
    {{end}}



    {{range gets "/HTTPS/*"}}
    {{$data := json .Value}}
    upstream https_{{ $data.HOST_NAME }} {
        
        {{range $data.IP}}
        server {{ . }}:443;
        {{end}}
    }
    {{end}}

	

    {{range gets "/HTTP/*"}}
    {{$data := json .Value}}
    server {
        listen       80;       
        server_name  {{ $data.HOST_NAME }};
        
        location / {
            
            proxy_pass http://http_{{ $data.HOST_NAME }};
                      
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            

        }
	}
    {{end}}


    {{range gets "/HTTPS/*"}}
    {{$data := json .Value}}
    server {
        listen 443;
        server_name {{ $data.HOST_NAME }};
        ssl on;
        
        ssl_certificate   cert/2063896__62el.cn.pem;
        ssl_certificate_key  cert/2063896__62el.cn.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;


        location / {
            proxy_pass  https://https_{{ $data.HOST_NAME }};
            proxy_set_header        Accept-Encoding   "";
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            add_header              Front-End-Https   on;
            proxy_redirect     off;
        }
    }
    {{end}}

}


